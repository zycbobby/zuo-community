========================================================================
  SNAP : Stanford Network Analysis Platform
	http://snap.stanford.edu
========================================================================

Stanford Network Analysis Platform (SNAP) is a general purpose, high
performance system for analysis and manipulation of large networks.
The core SNAP library is written in C++ and optimized for maximum
performance and compact graph representation. It easily scales to
massive networks with hundreds of millions of nodes, and billions of edges.

The examples work under Windows with Visual Studio or Cygwin with GCC,
Mac OS X, Linux and other Unix variants with GCC. Make sure that a
C++ compiler is installed on the system. Visual Studio project files
and makefiles are provided. For makefiles, compile the code with
"make all". The SnapExamples project files compile all the examples.

Some of applications expect that GnuPlot and GraphViz are installed and
accessible -- paths are in the system PATH variable or they reside in the
working directory.

/////////////////////////////////////////////////////////////////////////////
Example applications: http://snap.stanford.edu/snap/download.html

Execute:
  make all  : compiles all sample applications (debug mode)
  make opt  : compiles all sample applications (release mode, 10x faster code!)
  make demo : executes all sample application
  
Examples:
  cascades :
  	Simulate a SI (susceptible-infected) model on a network and compute
	structural properties of cascades
  centrality :
	Node centrality measures (closeness, eigen, degree, betweenness, 
	page rank, hubs and authorities)
  cliques :
	Overlapping network community detection (Clique Percolation Method)
  community :
	Network Community detection (Girvan-Newman and Clauset-Newman-Moore)
  concomp :
  	Manipulates connected components of a graph
  forestfire : 
  	Forest Fire graph generator
  graphhen : 
	Common graph generators (Small-world, Preferential Attachment, etc.)
  graphhash : 
	Graph hash table for counting frequencies of small graphs
  kcores :
  	Computes the k-core decomposition of the network
  kronem : 
  	Estimates Kronecker graph parameter matrix using EM algorithm
  krongen : 
  	Kronecker graph generator
  kronfit : 
  	Estimates Kronecker graph parameter matrix
  maggen : 
  	Multiplicative Attribute Graph (MAG) generator
  magfit : 
  	Estimates MAG model parameter
  motifs : 
  	Counts the number of occurrence of every possible subgraph on K nodes 
  	in the network
  ncpplot : 
  	Computes Network Community Profile (NCP) plot 
  netevol :
  	Computes properties of an evolving network, like evolution of 
  	diameter, densification power law, degree distribution, etc.
  netstat :
  	Computes statistical properties of a static network, like degree
	distribution, hop plot, clustering coefficient, distribution of sizes
	of connected components, spectral properties of graph adjacency
	matrix, etc.

/////////////////////////////////////////////////////////////////////////////
SNAP documentation:
  http://snap.stanford.edu/snap/doc.html

